name: CI

on:
  push:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Setup Node.js environment
        uses: actions/setup-node@v2.1.5
        with:
          node-version: 14.x
      
      # Cacheia os pacotes do Yarn
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      # Instalar as dependências NPM/Yarn no Github
      - name: Install project dependencies
        run: yarn

      # Executar a build
      - name: Build project
        run: yarn build

      # Copiar e substituir arquivos na Digital Ocean
      - name: Copy files to Digital Ocean via ssh
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          source: ".,!node_modules"
          target: "~/app/GoBarber-backend"

      # Instalar as dependências NPM/Yarn na Digital Ocean
      - name: Install project dependencies on Digital Ocean
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: | # cd ~/app/GoBarber-backend && yarn
            cd ~/app/GoBarber-backend
            yarn

      # Executar as migrations do TypeORM
      - name: Run TypeORM's migrations on Digital Ocean
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: | # cd ~/app/GoBarber-backend && ./node_modules/.bin/typeorm migration:run
            cd ~/app/GoBarber-backend
            ./node_modules/.bin/typeorm migration:run

      # Reiniciar o servidor NodeJS
      - name: Reset the node server by PM2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: pm2 restart server # Name or ID of the PM2
